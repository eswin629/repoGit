#####################CoderByte#################################




Find Intersection
function FindIntersection(strArr) { 

  let arr1 = strArr[0].split(',').map(Number);
  let arr2 = strArr[1].split(',').map(Number);
  const intersection = arr1.filter(num => arr2.includes(num));

    // If intersection is empty, return 'false'
    if (intersection.length === 0) {
        return 'false';
    }

    // Sort the intersection
    intersection.sort((a, b) => a - b);


  // code goes here  
  // return strArr; 
  return intersection.join(',');

}
   
// keep this function call here 
console.log(FindIntersection(readline()));

Input: ["1, 3, 4, 7, 13", "1, 2, 4, 13, 15"]
Output: 1,4,13



First Reverse

function FirstReverse(str) { 

  // code goes here  
   return str.split("").reverse().join("");
  // return str.reverse();

}
   
// keep this function call here 
console.log(FirstReverse(readline()));


First Factorial
function FirstFactorial(num) { 
 if (num === 0 || num === 1) {
        return 1;
    } else {
        return num * FirstFactorial(num - 1);
    }

  // code goes here  
  // return num; 
}


Longest Word
function LongestWord(sen) { 

 // Remove punctuation and split the string into words
    const words = sen.replace(/[^a-zA-Z0-9\s]/g, '').split(' ');

    // Initialize variables to store the longest word and its length
    let longestWord = '';
    let maxLength = 0;

    // Iterate through the words to find the longest one
    for (let word of words) {
        if (word.length > maxLength) {
            longestWord = word;
            maxLength = word.length;
        }
    }

    return longestWord;

}